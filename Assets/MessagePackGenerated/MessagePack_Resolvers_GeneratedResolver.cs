// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    using System;
    using System.Buffers;
    using MessagePack;

    public class GeneratedResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new GeneratedResolver();

        private GeneratedResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = GeneratedResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class GeneratedResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<Type, int> lookup;

        static GeneratedResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<Type, int>(41)
            {
                { typeof(global::System.Collections.Generic.List<global::Server.SharedThings.Packets.Representations.Character>), 0 },
                { typeof(global::System.Collections.Generic.HashSet<global::Server.SharedThings.Packets.Representations.BasicEntity>), 1 },
                { typeof(global::System.Collections.Generic.HashSet<string>), 2 },
                { typeof(global::Server.SharedThings.Packets.ClientPackets.Enums.MovementDirection), 3 },
                { typeof(global::Server.SharedThings.Enums.AuthorityType), 4 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Enums.CharacterCreateResponseType), 5 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Enums.CharacterDeleteResponseType), 6 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Enums.CharacterSelectResponseType), 7 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Enums.LoginFailedType), 8 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Enums.RegisterResponseType), 9 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Enums.SessionLoginResponseType), 10 },
                { typeof(global::Server.SharedThings.Packets.BasicPacketCapsule), 11 },
                { typeof(global::Server.SharedThings.Packets.ClientPackets.CharacterCreateRequest), 12 },
                { typeof(global::Server.SharedThings.Packets.ClientPackets.CharacterDeleteRequest), 13 },
                { typeof(global::Server.SharedThings.Packets.ClientPackets.CharacterListRequest), 14 },
                { typeof(global::Server.SharedThings.Packets.ClientPackets.CharacterSelectRequest), 15 },
                { typeof(global::Server.SharedThings.Packets.ClientPackets.LoginRequest), 16 },
                { typeof(global::Server.SharedThings.Packets.ClientPackets.RegisterRequest), 17 },
                { typeof(global::Server.SharedThings.Packets.ClientPackets.SessionLoginRequest), 18 },
                { typeof(global::Server.SharedThings.Packets.ClientPackets.Game.ClientDeclareMovementDirection), 19 },
                { typeof(global::Server.SharedThings.Packets.ClientPackets.Game.ClientSendChatMessage), 20 },
                { typeof(global::Server.SharedThings.Packets.Representations.BasicEntity), 21 },
                { typeof(global::Server.SharedThings.Packets.Representations.Character), 22 },
                { typeof(global::Server.SharedThings.Packets.Representations.OwnPlayer), 23 },
                { typeof(global::Server.SharedThings.Packets.Representations.Player), 24 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.CharacterCreateResponse), 25 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.CharacterDeleteResponse), 26 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.CharacterListResponse), 27 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.CharacterSelectResponse), 28 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.LoginFailed), 29 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.LoginSucceeded), 30 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.RegisterResponse), 31 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.SessionLoginResponse), 32 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Game.DeclareEntities), 33 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Game.DeclareEntity), 34 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Game.EntityUpdatePosition), 35 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Game.PlayerStart), 36 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Game.PlayerUpdateOwnPosition), 37 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Game.RevokeEntities), 38 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Game.RevokeEntity), 39 },
                { typeof(global::Server.SharedThings.Packets.ServerPackets.Game.ServerSendChatMessage), 40 },
            };
        }

        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new global::MessagePack.Formatters.ListFormatter<global::Server.SharedThings.Packets.Representations.Character>();
                case 1: return new global::MessagePack.Formatters.HashSetFormatter<global::Server.SharedThings.Packets.Representations.BasicEntity>();
                case 2: return new global::MessagePack.Formatters.HashSetFormatter<string>();
                case 3: return new MessagePack.Formatters.Server.SharedThings.Packets.ClientPackets.Enums.MovementDirectionFormatter();
                case 4: return new MessagePack.Formatters.Server.SharedThings.Enums.AuthorityTypeFormatter();
                case 5: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Enums.CharacterCreateResponseTypeFormatter();
                case 6: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Enums.CharacterDeleteResponseTypeFormatter();
                case 7: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Enums.CharacterSelectResponseTypeFormatter();
                case 8: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Enums.LoginFailedTypeFormatter();
                case 9: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Enums.RegisterResponseTypeFormatter();
                case 10: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Enums.SessionLoginResponseTypeFormatter();
                case 11: return new MessagePack.Formatters.Server.SharedThings.Packets.BasicPacketCapsuleFormatter();
                case 12: return new MessagePack.Formatters.Server.SharedThings.Packets.ClientPackets.CharacterCreateRequestFormatter();
                case 13: return new MessagePack.Formatters.Server.SharedThings.Packets.ClientPackets.CharacterDeleteRequestFormatter();
                case 14: return new MessagePack.Formatters.Server.SharedThings.Packets.ClientPackets.CharacterListRequestFormatter();
                case 15: return new MessagePack.Formatters.Server.SharedThings.Packets.ClientPackets.CharacterSelectRequestFormatter();
                case 16: return new MessagePack.Formatters.Server.SharedThings.Packets.ClientPackets.LoginRequestFormatter();
                case 17: return new MessagePack.Formatters.Server.SharedThings.Packets.ClientPackets.RegisterRequestFormatter();
                case 18: return new MessagePack.Formatters.Server.SharedThings.Packets.ClientPackets.SessionLoginRequestFormatter();
                case 19: return new MessagePack.Formatters.Server.SharedThings.Packets.ClientPackets.Game.ClientDeclareMovementDirectionFormatter();
                case 20: return new MessagePack.Formatters.Server.SharedThings.Packets.ClientPackets.Game.ClientSendChatMessageFormatter();
                case 21: return new MessagePack.Formatters.Server.SharedThings.Packets.Representations.BasicEntityFormatter();
                case 22: return new MessagePack.Formatters.Server.SharedThings.Packets.Representations.CharacterFormatter();
                case 23: return new MessagePack.Formatters.Server.SharedThings.Packets.Representations.OwnPlayerFormatter();
                case 24: return new MessagePack.Formatters.Server.SharedThings.Packets.Representations.PlayerFormatter();
                case 25: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.CharacterCreateResponseFormatter();
                case 26: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.CharacterDeleteResponseFormatter();
                case 27: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.CharacterListResponseFormatter();
                case 28: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.CharacterSelectResponseFormatter();
                case 29: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.LoginFailedFormatter();
                case 30: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.LoginSucceededFormatter();
                case 31: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.RegisterResponseFormatter();
                case 32: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.SessionLoginResponseFormatter();
                case 33: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Game.DeclareEntitiesFormatter();
                case 34: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Game.DeclareEntityFormatter();
                case 35: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Game.EntityUpdatePositionFormatter();
                case 36: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Game.PlayerStartFormatter();
                case 37: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Game.PlayerUpdateOwnPositionFormatter();
                case 38: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Game.RevokeEntitiesFormatter();
                case 39: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Game.RevokeEntityFormatter();
                case 40: return new MessagePack.Formatters.Server.SharedThings.Packets.ServerPackets.Game.ServerSendChatMessageFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1649 // File name should match first type name
